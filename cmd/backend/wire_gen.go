// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"explorer/internal/conf"
	"explorer/internal/server"
	"explorer/internal/service"

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"

	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(ctx context.Context, bc *conf.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	cleanup := func(ctx context.Context){
		logger.Log(log.LevelInfo,"msg","close the data resources")
	}
	
	basicClient := service.NewBasicService(logger)
	httpServer := server.NewHTTPServer(bc.Server, basicClient, logger)
	grpcServer := server.NewGRPCServer(bc.Server, basicClient, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup(ctx)
	}, nil
}
